import { Component, Signal, inject } from '@angular/core';<% if (!hasViewProviderHelper) { %>
import { ControlContainer } from '@angular/forms';<% } %>
import { NgxfbBlockDirective } from '@ngx-formbar/core';
import { <%= classify(interfaceName) %> } from './<%= dasherize(interfaceName) %>.type';<% if (hasViewProviderHelper) { %>
import { <%= viewProviderIdentifier %> } from '<%= viewProviderHelperPath %>';<% } %><% if (hasHostDirectiveHelper) { %>
import { <%= hostDirectiveIdentifier %> } from '<%= hostDirectiveHelperPath %>';<% } %>

@Component({
  selector: 'app-<%= dasherize(componentName) %>',
  imports: [],
  templateUrl: './<%= dasherize(componentName) %>.component.html',
   viewProviders: <% if (hasViewProviderHelper) { %><%= viewProviderIdentifier %><% } else { %>[
      {
        provide: ControlContainer,
        useFactory: () => inject(ControlContainer, { skipSelf: true }),
      }
    ]<% } %>,
   hostDirectives: <% if (hasHostDirectiveHelper) { %>[<%= hostDirectiveIdentifier %>]<% } else { %>[
      {
        directive: NgxfbBlockDirective,
        inputs: ['content', 'name'],
      }
    ]<% } %>,
})
export class <%= classify(componentClassName) %> {
  private readonly block = inject(NgxfbBlockDirective<<%= classify(interfaceName) %>>);
  readonly content: Signal<<%= classify(interfaceName) %>> = this.block.content;
}

