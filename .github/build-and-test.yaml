name: Build, Test and Validate

on:
  pull_request:
    branches: [ main, develop, 'release/*' ]
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Build library
        run: npm run build

      - name: Run tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless

  check-version-bump:
    if: startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version bump commit
        run: |
          # Get the last commit message
          LAST_COMMIT_MSG=$(git log -1 --pretty=format:"%s")

          # Check if last commit starts with "v" or contains "version"
          if [[ ! $LAST_COMMIT_MSG =~ ^v[0-9] ]] && [[ ! $LAST_COMMIT_MSG =~ version ]]; then
            echo "❌ Error: Last commit in release branch must be version bump"
            echo "Last commit message: $LAST_COMMIT_MSG"
            exit 1
          fi

      - name: Compare versions with main
        run: |
          # Get package.json from main
          git fetch origin main
          MAIN_VERSION=$(git show origin/main:package.json | jq -r .version)

          # Get current package.json version
          CURRENT_VERSION=$(jq -r .version package.json)

          # Compare versions
          if [ "$MAIN_VERSION" = "$CURRENT_VERSION" ]; then
            echo "❌ Error: Version in release branch ($CURRENT_VERSION) must be different from main branch ($MAIN_VERSION)"
            exit 1
          fi

          # Optional: Ensure new version is greater than main version
          if [ "$(printf '%s\n' "$MAIN_VERSION" "$CURRENT_VERSION" | sort -V | head -n1)" = "$CURRENT_VERSION" ]; then
            echo "❌ Error: Version in release branch ($CURRENT_VERSION) must be greater than main branch ($MAIN_VERSION)"
            exit 1
          fi

          echo "✅ Version check passed:"
          echo "Main version: $MAIN_VERSION"
          echo "New version: $CURRENT_VERSION"
